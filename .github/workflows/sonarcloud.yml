name: CI/CD with SonarCloud

on:
  push:
    branches: [main]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies & run tests with coverage
        run: |
          python -m pip install --upgrade pip
          pip install coverage
          coverage run -m unittest discover
          coverage xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: aishsara23_sonar-python-demo
          SONAR_ORGANIZATION: aishsara23

      - name: Wait and check SonarCloud Quality Gate status
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Waiting for Quality Gate result from SonarCloud..."
          sleep 10
          for i in {1..10}; do
            STATUS=$(curl -s -u "${SONAR_TOKEN}:" \
              "https://sonarcloud.io/api/qualitygates/project_status?projectKey=aishsara23_sonar-python-demo" \
              | jq -r '.projectStatus.status')

            echo "Current Quality Gate Status: $STATUS"

            if [ "$STATUS" == "OK" ]; then
              echo "‚úÖ Quality Gate passed."
              exit 0
            elif [ "$STATUS" == "ERROR" ]; then
              echo "‚ùå Quality Gate failed. Stopping pipeline."
              exit 1
            else
              echo "‚åõ Still waiting... trying again in 5s"
              sleep 5
            fi
          done

          echo "‚ö†Ô∏è Timed out waiting for Quality Gate status."
          exit 1

  deploy:
    needs: build-and-analyze
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Mock Deploy
        run: echo "üöÄ Deployed because tests and SonarCloud passed!"
